
public class ExponentialSearch {

    // Function to perform binary search in the subarray arr[low..high]
    public static int binarySearch(int[] arr, int low, int high, int target) {
        while (low <= high) {
            int mid = low + (high - low) / 2;
            
            // Check if the target is present at mid
            if (arr[mid] == target) {
                return mid;
            }
            
            // If target is greater, ignore the left half
            if (arr[mid] < target) {
                low = mid + 1;
            } 
            // If target is smaller, ignore the right half
            else {
                high = mid - 1;
            }
        }
        
        // Target is not present in the array
        return -1;
    }

    // Function to perform exponential search
    public static int exponentialSearch(int[] arr, int target) {
        int n = arr.length;
        
        // If array is empty
        if (n == 0) {
            return -1;
        }
        
        // If target is at the first position
        if (arr[0] == target) {
            return 0;
        }
        
        // Find range for binary search
        int i = 1;
        while (i < n && arr[i] <= target) {
            i = i * 2;
        }
        
        // Call binary search for the found range
        return binarySearch(arr, i / 2, Math.min(i, n - 1), target);
    }

    public static void main(String[] args) {
        int[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}; // Sorted array
        int target = 7; // Target value to search for

        int result = exponentialSearch(arr, target);
        if (result != -1) {
            System.out.println("Element found at index: " + result);
        } else {
            System.out.println("Element not found in the array.");
        }
    }
}
